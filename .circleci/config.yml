version: 2

references:

working_directory: &working_directory
  ~/terraform

terraform_image: &terraform_image
  hashicorp/terraform:light

yamllint_image: &yamllint_image
  sdesbure/yamllint:latest

terraform_config: &terraform_config
  docker:
    - image: *terraform_image
  working_directory: *working_directory
  environment:
    BASH_ENV: /root/.bashrc

yamllint_config: &yamllint_config
  docker:
    - image: *yamllint_image
  working_directory: *working_directory

repo_cache_key: &repo_cache_key
  v1-repo-{{ .Branch }}-{{ .Revision }}

# Step to restore repository from cache
restore_repo: &restore_repo
  restore_cache:
    key: *repo_cache_key

save_repo: &save_repo
  save_cache:
    key: *repo_cache_key
    paths:
      - *working_directory

set_terraform_environment: &set_terraform_environment
  run:
    name: set terraform environment
    command: |
      cd && touch $BASH_ENV
      echo 'export TERRAFORM_ENVIRONMENT=prod' >> $BASH_ENV
      echo 'export TERRAFORM_DIR=./terraform' >> $BASH_ENV

      #if [ "${CIRCLE_BRANCH}" == "master" ]; then
      #  echo 'export TERRAFORM_ENVIRONMENT=prod' >> $BASH_ENV
      #else
      #  echo 'export TERRAFORM_ENVIRONMENT=dev' >> $BASH_ENV
      #fi

terraform_init: &terraform_init
  run:
    name: terraform init
    command: |
      source $BASH_ENV
      terraform init $TERRAFORM_DIR
      terraform workspace select $TERRAFORM_ENVIRONMENT $TERRAFORM_DIR

tfnotify_install: &tfnotify_install
  run:
    name: tfnotify install
    command: |
      curl -vOL https://github.com/mercari/tfnotify/releases/download/v0.2.0/tfnotify_v0.2.0_linux_amd64.tar.gz
      tar -xzvf tfnotify_v0.2.0_linux_amd64.tar.gz
      mv tfnotify_v0.2.0_linux_amd64/tfnotify /usr/local/bin
      rm -rf tfnotify_v0.2.0_linux_amd64*

apply_job: &apply_job
  <<: *default_config
  steps:
    - *restore_repo
    - *set_terraform_environment
    - *terraform_init
    - attach_workspace:
        at: *working_directory
    - run:
        name: terraform apply
        command: |
          source $BASH_ENV
          terraform apply --auto-approve terraform.plan
jobs:
  lint:
    <<: *default_config
    steps:
      - checkout
      - *set_terraform_environment
      - run:
          name: terraform fmt
          command: |
            source $BASH_ENV
            if [ $(terraform fmt $TERRAFORM_DIR | grep -v .terraform | tee fmt_result.txt | wc -l) -gt 0 ]; then
              echo "Terraform files require syntax reformating:"
              echo
              cat fmt_result.txt
              rm fmt_result.txt
              git checkout -- .
              echo
              echo "Please run terraform fmt"
              exit 1
            fi
      - *save_repo

  plan:
    <<: *default_config
    steps:
      - *restore_repo
      - *set_terraform_environment
      - *terraform_init
      - *tfnotify_install
      - run:
          name: terraform plan
          command: |
            source $BASH_ENV
            terraform plan -out=terraform.plan $TERRAFORM_DIR
      - run:
          name: tfnotify plan
          command: terraform plan terraform.plan | tfnotify plan

      - persist_to_workspace:
          root: *working_directory
          paths:
            - terraform.plan

  apply:
    <<: *apply_job
  #apply-with-approval:
  #  <<: *apply_job

workflows:
  version: 2
  lint_plan_apply:
    jobs:
      - lint
      - plan:
          requires:
            - lint
      #- approve:
      #    type: approval
      #    requires:
      #      - plan
      #    filters:
      #      branches:
      #        only: master
      #- apply-with-approval:
      #    requires:
      #      - approve
      #    filters:
      #      branches:
      #        only: master
      - apply:
          requires:
            - plan
          filters:
            branches:
              only: master
